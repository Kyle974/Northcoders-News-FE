{"ast":null,"code":"var _jsxFileName = \"/Users/kylewalker/Desktop/Northcoders-News/NC-News-FE/Northcoders-News-FE/src/Components/CommentsSection.jsx\";\nimport React, { Component } from \"react\";\nimport Vote from \"./Vote\";\nimport AddComment from \"./AddComment\";\nimport RemoveComment from \"./RemoveComment\";\nimport { fetchComments } from \"../utilities\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Card, Typography, CardContent, CardMedia } from \"@material-ui/core\";\n\nclass CommentsSection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: null\n    };\n\n    this.showNewComment = newComment => {\n      this.setState({\n        comments: [newComment, ...this.state.comments]\n      });\n    };\n\n    this.removeDeletedComment = deletedComment => {\n      this.setState({\n        comments: this.state.comments.filter(comment => comment !== deletedComment)\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.state.comments && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(AddComment, {\n      article_id: this.props.article_id,\n      showNewComment: this.showNewComment,\n      removeDeletedComment: this.removeDeletedComment,\n      loggedInUser: this.props.loggedInUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.state.comments.map(comment => React.createElement(Card, {\n      style: {\n        display: \"flex\"\n      },\n      key: comment.comment_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(UserAvatar, {\n      username: comment.author,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, comment.author)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, comment.body), React.createElement(Vote, {\n      votes: comment.votes,\n      path: \"comments/\".concat(comment.comment_id),\n      loggedInUser: this.props.loggedInUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), this.props.loggedInUser && this.props.loggedInUser.username === comment.author && React.createElement(RemoveComment, {\n      comment: comment,\n      removeDeletedComment: this.removeDeletedComment,\n      comment_id: comment.comment_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })))))));\n  }\n\n  componentDidMount() {\n    fetchComments(this.props.article_id).then(({\n      data\n    }) => this.setState({\n      comments: data.comments\n    }));\n  }\n\n}\n\nexport default CommentsSection;","map":{"version":3,"sources":["/Users/kylewalker/Desktop/Northcoders-News/NC-News-FE/Northcoders-News-FE/src/Components/CommentsSection.jsx"],"names":["React","Component","Vote","AddComment","RemoveComment","fetchComments","UserAvatar","Card","Typography","CardContent","CardMedia","CommentsSection","state","comments","showNewComment","newComment","setState","removeDeletedComment","deletedComment","filter","comment","render","props","article_id","loggedInUser","map","display","comment_id","author","body","votes","username","componentDidMount","then","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Vote from \"./Vote\";\nimport AddComment from \"./AddComment\";\nimport RemoveComment from \"./RemoveComment\";\nimport { fetchComments } from \"../utilities\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Card, Typography, CardContent, CardMedia } from \"@material-ui/core\";\n\nclass CommentsSection extends Component {\n  state = {\n    comments: null\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.comments && (\n          <div>\n            <AddComment\n              article_id={this.props.article_id}\n              showNewComment={this.showNewComment}\n              removeDeletedComment={this.removeDeletedComment}\n              loggedInUser={this.props.loggedInUser}\n            />\n            <div>\n              {this.state.comments.map((comment) => (\n                <Card style={{ display: \"flex\" }} key={comment.comment_id}>\n                  <div>\n                    <div>\n                      <UserAvatar username={comment.author} />\n                    </div>\n                    <h3>{comment.author}</h3>\n                  </div>\n                  <div>\n                    <p>{comment.body}</p>\n\n                    <Vote\n                      votes={comment.votes}\n                      path={`comments/${comment.comment_id}`}\n                      loggedInUser={this.props.loggedInUser}\n                    />\n\n                    {this.props.loggedInUser &&\n                      this.props.loggedInUser.username === comment.author && (\n                        <RemoveComment\n                          comment={comment}\n                          removeDeletedComment={this.removeDeletedComment}\n                          comment_id={comment.comment_id}\n                        />\n                      )}\n                  </div>\n                </Card>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    fetchComments(this.props.article_id).then(({ data }) =>\n      this.setState({ comments: data.comments })\n    );\n  }\n\n  showNewComment = (newComment) => {\n    this.setState({ comments: [newComment, ...this.state.comments] });\n  };\n\n  removeDeletedComment = (deletedComment) => {\n    this.setState({\n      comments: this.state.comments.filter(\n        (comment) => comment !== deletedComment\n      )\n    });\n  };\n}\n\nexport default CommentsSection;\n"]},"metadata":{},"sourceType":"module"}